@using System
@using System.Linq
@using System.Collections.Generic

@{
  var targetFrameworkMoniker = "MonoAndroid12.0";
}

<Project Sdk="Xamarin.Legacy.Sdk">
  <PropertyGroup>
    <TargetFrameworks>$(_DefaultTargetFrameworks)</TargetFrameworks>
    <IsBindingProject>true</IsBindingProject>
    @if (!string.IsNullOrEmpty(Model.AssemblyName)) {
    <AssemblyName>@(Model.AssemblyName)</AssemblyName>
    } else {
    <AssemblyName>@(Model.NuGetPackageId)</AssemblyName>
    }
  </PropertyGroup>

  @{
      string name_short = Model.NuGetPackageId.Replace("Xamarin.GooglePlayServices.", "");
      string key = Model.NuGetPackageId;
      string project_url = "https://github.com/xamarin/GooglePlayServicesComponents";
      string license_url = "https://github.com/xamarin/GooglePlayServicesComponents/blob/master/LICENSE.md";
      string icon_url = "N/A";
      string summary = "N/A";
      string description = "N/A";

      if (ArtifactsNugetPackageData.ContainsKey(key))
      {
        var npd = ArtifactsNugetPackageData[key];
        project_url = npd.ProjectUrl;
        license_url = npd.LicenseUrl;
        icon_url = npd.IconUrl;
        summary = npd.Summary;
        description = npd.Description;
      }

      string c = Model.Name;

      string[] artifact_version_parts = Model.NuGetVersion
                                              .Substring(1, Model.NuGetVersion.Length - 1)
                                              .Split(new string[] { "-" }, StringSplitOptions.None);
      string artifact_version = null;

      string artifact_version_release = artifact_version_parts[0];
      string[] artifact_version_release_parts = artifact_version_release.Split(new string[] { "." }, StringSplitOptions.None);
      artifact_version = string.Join(".", artifact_version_release_parts, 0, 3);

      if (artifact_version_parts.Length == 1)
      {
          // release
      }
      if (artifact_version_parts.Length == 2)
      {
          artifact_version += "-" + artifact_version_parts[1];
      }
  }

  <PropertyGroup>
    <PackageId>@(Model.NuGetPackageId)</PackageId>
    <Title>.NET for Android (formerly Xamarin.Android) Bindings for Google Play Services -  @(name_short)</Title>
    <Summary>
      .NET for Android (formerly Xamarin.Android) Bindings for Google Play Services - `@(name_short)` `@(Model.NuGetVersion)`
    </Summary>
    <Description>
        .NET for Android (formerly Xamarin.Android) bindings for Google Play Services library '@(Model.MavenGroupId):@(Model.Name)'.
        
        @(summary)
    </Description>
    <PackageTags> .NET for Android Xamarin.Android Bindings for Google Play Services artifact=@(Model.MavenGroupId):@(Model.Name):@(artifact_version) artifact_versioned=@(Model.MavenGroupId):@(Model.Name):@(artifact_version)</PackageTags>
    <Authors>Microsoft</Authors>
    <Owners>Microsoft</Owners>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageProjectUrl>@(project_url)</PackageProjectUrl>
    <PackageLicenseUrl>@(license_url)</PackageLicenseUrl>
    <PackageIconUrl>@(icon_url)</PackageIconUrl>
    <PackageVersion>@(Model.NuGetVersion)</PackageVersion>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <!-- Include symbol files (*.pdb) in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

    @switch (@Model.NuGetPackageId)
    {
      case "Xamarin.Google.MLKit.ObjectDetection":
      case "Xamarin.Google.MLKit.ObjectDetection.Custom":
      case "Xamarin.Google.MLKit.PoseDetection":
      case "Xamarin.Google.MLKit.PoseDetection.Accurate":
    <!-- Filed as https://github.com/xamarin/java.interop/issues/1116 -->
    <AndroidBoundInterfacesContainStaticAndDefaultInterfaceMethods>false</AndroidBoundInterfacesContainStaticAndDefaultInterfaceMethods>
      break;
    }

  </PropertyGroup>

  <PropertyGroup>
    <AndroidClassParser>class-parse</AndroidClassParser>
    <AndroidCodegenTarget>XAJavaInterop1</AndroidCodegenTarget>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      =================================================================================================================
      CS warnings (from AndroidX)
    -->
    <!--
      No warnings for:
       - CS0618: 'member' is obsolete: 'text'
       - CS0109: The member 'member' does not hide an inherited member. The new keyword is not required
       - CS0114: 'function1' hides inherited member 'function2'. To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
       - CS0628: 'member' : new protected member declared in sealed class
       - CS0108: 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
       - CS0809: Obsolete member 'member' overrides non-obsolete member 'member'
    -->
    <NoWarn>0618;0109;0114;0628;0108;0809</NoWarn>
    <!--
      CS warnings (from AndroidX)
      =================================================================================================================
    -->
    <!--
      =================================================================================================================
      Xamarin.Android Bindings specific warnings
    -->
    <!--
      Ignoreable
      Performance hit for builds
      - BG8A04: <attr path="XPath" /> matched no nodes.
      - BG8A00: <remove-node path="XPath" /> matched no nodes.
    -->
    <NoWarn>BG8A04;BG8A00</NoWarn>

    <!--
      Harmfull
      - BG8401: Skipping managed_type, due to a duplicate field, method or nested type name. (Nested type) (Java type: java_type)
      - BG8604: top ancestor Type1 not found for nested type Namespace.Type1.Type2
      - BG8C00: For type Namespace.Type1, base interface java.Interface does not exist
      - BG8700: Unknown return type java.Type1 in method Method1 in managed type Namespace.Type2.
      - BG8800: Unknown parameter type java.Type1 in method Method2 in managed type Namespace.Type2.

    <WarningsAsErrors>BG8401;BG8604;BG8C00;BG8700;BG8800</WarningsAsErrors>
    -->
    <!--
      Xamarin.Android specific warnings
      =================================================================================================================
    -->
  </PropertyGroup>

  <ItemGroup>
      @foreach (var art in @Model.MavenArtifacts)
      {
      <TransformFile Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.xml" Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.xml')" />
      }
      @if (@Model.NuGetPackageId == "Xamarin.GooglePlayServices.AdsLite")
      {
      <TransformFile Include="..\..\externals\paramnames.xml" Condition="Exists('..\..\externals\paramnames.xml')" />
      }
  </ItemGroup>

  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts)
    {
    <JavaSourceJar
          Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-sources.jar"
          Condition="Exists('..\..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-sources.jar')"
          />
    <JavaDocJar
          Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-javadoc.jar"
          Condition="Exists('..\..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-javadoc.jar')"
          />
    }
  </ItemGroup>

  <ItemGroup>
    <_AndroidDocumentationPath Include="..\..\externals\paramnames.txt" Condition="Exists('..\..\externals\paramnames.txt')" />
    @foreach (var art in @Model.MavenArtifacts) {
    <_AndroidDocumentationPath Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.txt" Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-paramnames.txt')" />
    }
  </ItemGroup>

  <ItemGroup>
    <None Include="@(Model.NuGetPackageId).targets" Pack="True" PackagePath="@@(_TargetFrameworkNugetBuildFolders)" />
  </ItemGroup>

  @if (@Model.NuGetPackageId == "Xamarin.GooglePlayServices.Basement")
  {
    <ItemGroup>
      <None Include="..\..\source\com.google.android.gms\play-services-basement\buildtasks\bin\$(Configuration)\Xamarin.GooglePlayServices.Tasks.dll" Pack="True" PackagePath="@@(_TargetFrameworkNugetBuildFolders)" />
    </ItemGroup>
  }

  @if (@Model.MavenArtifacts.Count > 0) {
  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (art.ProguardFile != null) {
    <None Include="..\..\@(art.ProguardFile)" Pack="True" PackagePath="proguard" />
      }
    }
  </ItemGroup>
  }

  <ItemGroup>
    <Folder Include="Additions\" />
    <Folder Include="Jars\" />
    <Folder Include="Transforms\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\source\AssemblyInfo.cs" />
    <Compile Include="..\..\source\@(Model.MavenGroupId)\@(Model.Name)\Additions\*.cs">
        <Link>Additions/%(RecursiveDir)/%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <TransformFile Include="..\..\source\Metadata.Common.xml" >
      <Link>Transforms/Metadata.Common.xml</Link>
    </TransformFile>
    <TransformFile Include="..\..\source\@(Model.MavenGroupId)\@(Model.Name)\Transforms\*.xml">
        <Link>Transforms/%(RecursiveDir)/%(Filename)%(Extension)</Link>
    </TransformFile>
  </ItemGroup>

  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (1==2 && art.MavenArtifactPackaging == "aar") {
    <None Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" Pack="True" PackagePath="@@(_TargetFrameworkNugetAarFolders)" />
      }
    }
  </ItemGroup>


  @if (@Model.MavenArtifacts.Count > 0) {
  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) {
      if (art.MavenArtifactPackaging == "aar") {
        if ((System.Environment.GetEnvironmentVariable("LOCAL_TEST_PKG") ?? "") == "true") {
    <AndroidLibrary Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).aar" />

        } else {
    <InputJar Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)\classes.jar" />
    <!-- For those artifacts with lib/ folder -->
    <InputJar
      Condition="Exists('..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)\libs\')"
      Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)\libs\*.jar"
      />
        }
      } else {
    <EmbeddedJar Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).jar" />
      }
    }
    <!-- Pull in the play core extensions helpers -->
    @if (@Model.NuGetPackageId == "Xamarin.Google.Android.Play.Core")
    {
    <EmbeddedJar Include="..\..\externals\com.xamarin.google.android.play.core.extensions\extensions.jar" />
    }
  </ItemGroup>
  }
  <ItemGroup>
    <!-- ProjectReference -->
  </ItemGroup>

  <ItemGroup>
    <!-- ProjectReference -->
    @foreach (var dep in @Model.NuGetDependencies) {
      if (dep.IsProjectReference) {
        <ProjectReference Include="..\..\generated\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId)\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId).csproj" PrivateAssets="none" />
      }
    }
    <!-- some additional fixes -->
  </ItemGroup>

  <ItemGroup>
    <!-- PackageReference -->
    @foreach (var dep in @Model.NuGetDependencies) {
      if (!dep.IsProjectReference) {
      <PackageReference Include="@(dep.NuGetPackageId)" Version="@(dep.NuGetVersion)" PrivateAssets="none" />
      }
    }
    @if (@Model.NuGetPackageId == "Xamarin.GooglePlayServices.SafetyNet")
    {
      <Reference Include="System.Net.Http" />
      <PackageReference Include="System.Text.Json" Version="7.0.3" />
    }
    @if (@Model.NuGetPackageId == "Xamarin.Firebase.Firestore")
    {
      <PackageReference Include="Xamarin.Google.Guava" Version="31.1.0.8" />
    }
    @if (@Model.NuGetPackageId == "Xamarin.Firebase.Crashlytics")
    {
      <PackageReference Include="Xamarin.Google.Dagger" Version="2.46.1.2" />
    }
    @if (@Model.NuGetPackageId == "Xamarin.Firebase.Measurement.Connector.Impl")
    {
      <PackageReference Include="Xamarin.GooglePlayServices.Measurement.Base" Version="121.3.0.1" />
    }
    <!-- Reference -->
    <Reference Include="System.Net.Http" Condition=" '$(TargetFramework)' == '@(targetFrameworkMoniker)' " />
  </ItemGroup>


  @*
  <!--
  NOTE:
  Xamarin.Build.Download version set in GooglePlaySericesProjects.cshtml template is
  important for attributes in GooglePlaySericesTargets.cshtml template

  XamarinBuildDownloadAndroidAarLibrary   v >=  0.10.0
  XamarinBuildDownloadRestoreAssemblyAar  v <   0.10.0
  -->
  *@
  <ItemGroup>
    <PackageReference Include="Xamarin.Build.Download" Version="0.11.4" />
  </ItemGroup>

  <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />

</Project>

@functions
{
  public class ProjectCustomMetaData
  {
      public string Namespace
      {
        get;
        set;
      }
  }

  public class NugetPackageCustomMetaData
  {
      public string Title
      {
        get;
        set;
      }
      public string Version
      {
        get;
        set;
      }
      public string Summary
      {
        get;
        set;
      }
      public string Description
      {
        get;
        set;
      }
      public string ProjectUrl
      {
        get;
        set;
      }
      public string LicenseUrl
      {
        get;
        set;
      }
      public string IconUrl
      {
        get;
        set;
      }

  }

  public Dictionary<string, NugetPackageCustomMetaData> ArtifactsNugetPackageData = new Dictionary<string, NugetPackageCustomMetaData>()
  {
      {
        "Xamarin.GooglePlayServices.Ads",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Google Mobile Ads SDK is the latest generation in Google mobile advertising, featuring refined ad formats and streamlined APIs for access to mobile ad networks and advertising solutions. The SDK enables mobile app developers to maximize their monetization in native mobile apps.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865354",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-ads_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Ads.Base",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Google Mobile Ads SDK is the latest generation in Google mobile advertising, featuring refined ad formats and streamlined APIs for access to mobile ad networks and advertising solutions. The SDK enables mobile app developers to maximize their monetization in native mobile apps.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-ads-base_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Ads.Identifier",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Google Mobile Ads SDK is the latest generation in Google mobile advertising, featuring refined ad formats and streamlined APIs for access to mobile ad networks and advertising solutions. The SDK enables mobile app developers to maximize their monetization in native mobile apps.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-ads-base_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Ads.Lite",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Google Mobile Ads SDK is the latest generation in Google mobile advertising, featuring refined ad formats and streamlined APIs for access to mobile ad networks and advertising solutions. The SDK enables mobile app developers to maximize their monetization in native mobile apps.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-ads-lite_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Analytics",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Google Analytics SDK for Android makes it easy for developers to collect user engagement data form their apps.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865360",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-analytics_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Analytics.Impl",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Google Analytics SDK for Android makes it easy for developers to collect user engagement data form their apps.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-analytics-impl_128x128.png",
        }
      },
      /*
        {
        "Xamarin.GooglePlayServices.AppIndexing",
        new  NugetPackageCustomMetaData()
        {
          Description = @"NOTE: This is package only contains type forwarders to the types which now exist in Xamarin.Firebase.AppIndexing and is only available for backwards compatibility purposes.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-appindexing_128x128.png",
        }
      },
      */
      {
        "Xamarin.GooglePlayServices.AppInvite",
        new  NugetPackageCustomMetaData()
        {
          Description = @"App Invites provide a powerful way to organically grow your app, user-to-user. Your users recommend your app to their friends using personalized, contextual invitations powered by Google. App Invites provide a great onboarding experience to your new users. Google optimizes your app install rates by reducing friction and using relevant context at every step of the user invitation flow.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-appinvite_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Audience",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-audience_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Auth",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865364",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-auth_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Auth.Api.Phone",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-auth-phone-api_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Auth.Base",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-auth-base_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Awareness",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865368",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-awareness_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Base",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-base_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Basement",
        new  NugetPackageCustomMetaData()
        {
          Summary = " - do not install directly",
          Description = @"Instead of installing this package directly, install the specific package(s) you need.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-basement_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Cast",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Google Cast SDK lets you extend your Android app to control a TV or sound system. It supports many media formats, protocols and codecs to ease integration.  Continuous playback is enabled by autoplay and queuing APIs and Game Manager APIs make Cast enabled gaming a breeze.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865372",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-cast_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Cast.Framework",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-cast-framework_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Clearcut",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865372",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-clearcut_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Drive",
        new  NugetPackageCustomMetaData()
        {
          Description = @"With Drive now part of Android, integrating Drive services into your Android application has never been easier. With sync and offline support, we make it easier for you to focus on writing great apps. Simply read and write files and weâll handle the details.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865376",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-drive_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Fido",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-fitness_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Fitness",
        new  NugetPackageCustomMetaData()
        {
          Description = @"Google Fit is an open platform that lets users control their fitness data, developers build smarter apps, and manufacturers focus on creating amazing devices.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865380",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-fitness_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Flags",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-flags_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Games",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Play Games SDK provides cross-platform Google Play games services that lets you easily integrate popular gaming features such as achievements, leaderboards, Saved Games, and real-time multiplayer in your tablet and mobile games.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865384",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-games_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Gass",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-gass_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Gcm",
        new  NugetPackageCustomMetaData()
        {
          Description = @"
      Google Cloud Messaging (GCM) is a free service that enables developers to send messages between servers and client apps. This includes downstream messages from servers to client apps, and upstream messages from client apps to servers.

      For example, a lightweight downstream message could inform a client app that there is new data to be fetched from the server, as in the case of a ''new email' notification. For use cases such as instant messaging, a GCM message can transfer up to 4kb of payload to the client app. The GCM service handles all aspects of queueing of messages and delivery to and from the target client app.
          ",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-gcm_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Identity",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-identity_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Iid",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-iid_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.InstantApps",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865388",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-instantapps_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Location",
        new  NugetPackageCustomMetaData()
        {
          Description = @"One of the unique features of mobile applications is location awareness. Mobile users take their devices with them everywhere, and adding location awareness to your app offers users a more contextual experience. The location APIs available in Google Play services facilitate adding location awareness to your app with automated location tracking, geofencing, and activity recognition.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865326",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-location_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Maps",
        new  NugetPackageCustomMetaData()
        {
          Description = @"With the Google Maps Android API, you can add maps based on Google Maps data to your application. The API automatically handles access to Google Maps servers, data downloading, map display, and response to map gestures. You can also use API calls to add markers, polygons, and overlays to a basic map, and to change the user's view of a particular map area. These objects provide additional information for map locations, and allow user interaction with the map.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865333",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-maps_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Measurement.Base",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-measurement-base_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Measurement.Api",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-measurement-base_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Measurement.Sdk.Api",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-measurement-base_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Nearby",
        new  NugetPackageCustomMetaData()
        {
          Description = @"Nearby exposes simple publish and subscribe methods that rely on proximity. Your app publishes a payload that can be received by nearby subscribers. On top of this foundation, you can build a variety of user experiences to share messages and create real-time connections between nearby devices.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865337",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-nearby_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Oss.Licenses",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-oss-licenses_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Panorama",
        new  NugetPackageCustomMetaData()
        {
          Description = @"The Panorama API allows you to include a Panorama Viewer in your own applications.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865341",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-panorama_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Phenotype",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-phenotype_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Places",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865345",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-places_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Places.PlaceReport",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-places-placereport_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Plus",
        new  NugetPackageCustomMetaData()
        {
          Description = @"Create a more engaging experience and connect with more users by integrating social into your Android app.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865349",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-plus_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.SafetyNet",
        new  NugetPackageCustomMetaData()
        {
          Description = @"SafetyNet provides services for analyzing the configuration of a particular device, to make sure that apps function properly on a particular device and that users have a great experience.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865353",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-safetynet_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Stats",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-stats_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.TagManager",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865357",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-tagmanager_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.TagManager.Api",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-tagmanager-api_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.TagManager.V4.Impl",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-tagmanager-api_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Tasks",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-tasks_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Vision",
        new  NugetPackageCustomMetaData()
        {
          Description = @"
      The Face API finds human faces in photos, videos, or live streams. It also finds and tracks positions of facial landmarks such as the eyes, nose, and mouth.

      The API also provides information about the state of facial features -- are the subject's eyes open? Are they smiling? With these technologies, you can edit photos and video, enhance video feeds with effects and decorations, create hands-free controls for games and apps, or react when a person winks or smiles.

      The Barcode Scanner API detects barcodes in real time in any orientation. You can also detect and parse several barcodes in different formats at the same time.
          ",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865361",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-vision_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Vision.Common",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-vision-common_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Vision.ImageLabel",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-vision-image-label_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Wallet",
        new  NugetPackageCustomMetaData()
        {
          Description = @"Android Pay enables simple and secure purchases of physical goods and services in Android apps, and eliminates the need to manually enter payment and shipping information. Integrate Android Pay to reach millions of signed-in Android users and drive higher conversions.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865365",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-wallet_128x128.png",
        }
      },
      {
        "Xamarin.GooglePlayServices.Wearable",
        new  NugetPackageCustomMetaData()
        {
          Description = @"You may also want to install the Xamarin.Android.Wear package if you are installing this.",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865369",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-wearable_128x128.png",
        }
      },


      {
        "Xamarin.Firebase.Abt",
        new  NugetPackageCustomMetaData()
        {
          Description = @"You should not install this package directly",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-abt_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Ads",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865367",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-ads_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Ads.Lite",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-ads-lite_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Analytics",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865371",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-analytics_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Analytics.Impl",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-analytics-impl_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.AppIndexing",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865375",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-appindexing_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Auth",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865379",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-auth_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Auth.Impl",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-auth-interop_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Auth.Interop",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-auth-interop_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Common",
        new  NugetPackageCustomMetaData()
        {
          Description = @"You should not install this package directly",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-common_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Config",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865383",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-config_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Core",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-core_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Crash",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865387",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-crash_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Database",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865329",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-database_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Database.Collection",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-database-collection_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Database.Connection",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-database-connection_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Dynamic.Links",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-dynamic-links_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Firestore",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865340",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-firestore_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Functions",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-functions_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Iid",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865332",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-iid_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Iid.Interop",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-iid-interop_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Invites",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-invites_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Measurement.Connector",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-measurement-connector_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Measurement.Connector.Impl",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-measurement-connector-impl_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Messaging",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865344",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-messaging_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.ML.Common",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-ml-common_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.ML.Model.Interpreter",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-ml-model-interpreter_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.ML.Vision",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-ml-vision_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.ML.Vision.Image.Label.Model",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-ml-vision-image-label-model_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Perf",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865348",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-perf_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Storage",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865351",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-storage_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.Storage.Common",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865436",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865377",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/firebase-storage-common_128x128.png",
        }
      },
      {
        "Xamarin.Firebase.ProtoliteWellKnownTypes",
        new  NugetPackageCustomMetaData()
        {
          Description = @"",
          ProjectUrl = "https://go.microsoft.com/fwlink/?linkid=865435",
          LicenseUrl = "https://go.microsoft.com/fwlink/?linkid=865373",
          IconUrl = "https://raw.githubusercontent.com/xamarin/GooglePlayServicesComponents/master/icons/play-services-protolitewellknowntypes_128x128.png",
        }
      },
  };
}
